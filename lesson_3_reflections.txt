When would you want to use a remote repository rather than keeping all your work local?

When I want to share my project with other people. All as a backup place where I know
my stuff is safe my HDD gets corrupted.

Why might you want to always pull changes manually rather than having Git automatically
stay up-to-date with your remote repository?

I prefer manually pull because I can have some commits that are not prepared to be
consumed by other people. So although I want to have some historic of my development process
I may not want other people to have access to it before I have the rest of the work
done.

Describe the differences betweein forks, clones and branches. When would you use
one instead of another?

- FORKS: Used to copy a project to you repository in order to make changes that
		 you would like to push to the main project repository,
		 
- CLONES: Copy the repository to your local machine

- BRANCH: Create a new path for the commit tree of a repository. Used when working
		  on a new feature and you don't want to disrupt the master branch.

What is the benefit of having a copy of the last known state of the remote stored locally?

Enables offline working...

How would you collaborate without using Git or Github? What would be easier, and whould be harder?

Probably use e-mail or some kind of thread style site. The initial setup should be fairly easier
but it would be to difficult to keep all the changes. Also it would be difficult to understand who
broke the code and where.

When would you want to make changes in a separate branch rather than directly in master? What
benefits does each approach have?

You will almost always change stuff on your branch faster and than merge it with the master. The
only exception is when you are fixing small bugs that you are 100% sure it won't break the code.
Pushing directly to the master is faster however you may break the entire code.
